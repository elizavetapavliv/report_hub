name: Deploy Service and Run Mongo

on:
  workflow_dispatch:
  push:
    branches: [master]

jobs:
  publish:
    runs-on: ubuntu-latest  

    env:
       Mongo_Scripts_Path: Projects/Exadel.ReportHub/Exadel.ReportHub.Host/Deployment/Mongo
       Db_Connection_Uri: ${{ vars.DB_CONNECTION_URI }}
       Db_Name: ${{ vars.DB_NAME }}
       Db_User_Name: ${{ secrets.DB_USER_NAME }}
       Db_User_Password: ${{ secrets.DB_USER_PASSWORD }}
       Render_Deploy_Hook: ${{ secrets.RENDER_DEPLOY_HOOK }}
       ReportHubService_ClientSecret: ${{ secrets.REPORT_HUB_SERVICE_CLIENT_SECRET }}
       Authority: ${{ vars.AUTHORITY }}
       
    steps:
    - name: Checkout
      uses: actions/checkout@v4
        
    - name: Deploy
      run: |
          curl -X POST "${{ env.Render_Deploy_Hook }}"

    - name: Install MongoSh
      run: |
        sudo apt-get install gnupg
        wget -qO- https://www.mongodb.org/static/pgp/server-7.0.asc | sudo tee /etc/apt/trusted.gpg.d/server-7.0.asc
        echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
        sudo apt-get update
        sudo apt-get install -y mongodb-mongosh

    - name: Load Mongo scripts
      run: |
        for script in "${{ env.Mongo_Scripts_Path }}"/*.js; do
        echo $script
        mongosh "${{ env.Db_Connection_Uri }}/${{ env.Db_Name }}" --apiVersion 1 -u ${{ env.Db_User_Name }} -p ${{ env.Db_User_Password }} "$script"
        done
    
